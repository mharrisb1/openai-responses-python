[tool.poetry]
name = "openai-responses"
version = "0.10.2"
description = "ðŸ§ªðŸ¤– Pytest plugin for automatically mocking OpenAI requests"
authors = ["Michael Harris <mharris@definite.app>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/mharrisb1/openai-responses-python"
homepage = "https://mharrisb1.github.io/openai-responses-python/"
documentation = "https://mharrisb1.github.io/openai-responses-python/"
packages = [{ include = "openai_responses", from = "src" }]
keywords = ["openai", "pytest", "testing"]
classifiers = [
  "Topic :: Software Development :: Testing :: Mocking",
  "Topic :: Software Development :: Testing :: Unit",
]

[tool.poetry.plugins.pytest11]
openai_responses = "openai_responses.plugin"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
openai = ">=1.32,<1.46"
requests-toolbelt = "^1"
respx = "^0.20"

[tool.poetry.group.dev.dependencies]
black = "^24.2.0"
mypy = "^1.9.0"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"
mkdocs-material = "^9.5.18"
tox = "^4.14.2"
langchain-openai = "^0.1.20"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.9"
exclude = [".venv"]
venvPath = "."
venv = ".venv"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportMissingTypeStubs = false
reportUnusedImport = "error"
reportPrivateUsage = "none"
reportWildcardImportFromLibrary = "none"
