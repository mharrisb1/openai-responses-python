[tool.poetry]
name = "openai-responses"
version = "0.2.0"
description = "Automatically mock OpenAI requests"
authors = ["Michael Harris <mharris@definite.app>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/mharrisb1/openai-responses-python"
homepage = "https://github.com/mharrisb1/openai-responses-python"
packages = [{ include = "openai_responses", from = "src" }]

[tool.poetry.plugins.pytest11]
openai_responses = "openai_responses.plugin"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
openai = "^1.23"
respx = "^0.20.2"
decorator = "^5.1.1"
faker-openai-api-provider = "^0.1.0"
tiktoken = "^0.6.0"

[tool.poetry.group.dev.dependencies]
black = "^24.2.0"
mypy = "^1.9.0"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"
types-decorator = "^5.1.8.20240310"
mkdocs-material = "^9.5.18"
tox = "^4.14.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.9"
exclude = [".venv"]
venvPath = "."
venv = ".venv"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportMissingTypeStubs = false
reportUnusedImport = "error"
reportPrivateUsage = "none"
